$env.path ++= ["~/.local/bin"]

# Add autoload directory in the .config of the user directory
# Useful for Windows
let autoload_dir = ($nu.path.home | path join ".config/nushell/autoload")
if not ($nu.user-autoload-dirs | any {|dir| ($dir | path expand) == $autoload_dir }) {
    $env.config.nu.user-autoload-dirs = ($nu.user-autoload-dirs ++ [$autoload_dir])
}

source ($nu.data-dir  | path join 'internal.nu')

# Functions

## Create a new folder and jump inside
def mk [dirname] {
    mk $dirname
    cd $dirname
}

## Show information about Git identity
def gitid {
    echo "Current identity is"
    echo "Name: $(git config user.name)"
    echo "Email: $(git config user.email)"
}

## Fix incorrect origin
def fixor [origin?: string] {
    match $origin {
        null => {
            let current_origin = (git remote get-url origin)
            echo $"Current origin is: (ansi red)($current_origin)(ansi reset)"
            echo "No origin provided. Usage: fixor <new-origin-url>"
        }
        _ => git remote set-url origin $origin
    }
}

# Aliases
# ls is already good in nushell
# alias ls = eza
alias ll = ls -l
alias la = ls -a
alias rm = rm -i
alias mv = mv -i

alias x = xmake
alias xr = xmake run
alias xc = xmake clean
alias xbr = xmake; xmake run

alias gd = gradle
alias grr = gradle run
alias grb = gradle build
{{- if eq .chezmoi.os "linux" }}
alias mvw = "./mvnw"
{{ else }}
alias mvw = "./mvnw.cmd"
{{ end }}

alias ca = cargo
alias car = cargo run
alias cab = cargo build -q
