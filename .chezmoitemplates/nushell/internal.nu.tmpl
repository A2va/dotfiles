
{{ if eq .chezmoi.os "linux" }}
let fish_completer = {|spans|
    fish --command $"complete '--do-complete=($spans | str join ' ')'"
    | from tsv --flexible --noheaders --no-infer
    | rename value description
    | update value {
        if ($in | path exists) {$'"($in | str replace "\"" "\\\"" )"'} else {$in}
    }
}
{{ end}}

let xmake_completer = { |spans|
  let line = ($spans | str join " ")
  let cursor = ($line | str length)

  with-env { XMAKE_SKIP_HISTORY: "1" } {
    ^xmake lua "private.utils.complete" $cursor "nospace-json" $line
  } | from json | get value
}

let carapace_completer = {|spans: list<string>|
    carapace $spans.0 nushell ...$spans
    | from json
    | if ($in | default [] | where value =~ '^-.*ERR$' | is-empty) { $in } else { null }
}

let zoxide_completer = {|spans|
    $spans | skip 1 | zoxide query -l ...$in | lines | where {|x| $x != $env.PWD}
}

# This completer will use carapace by default
let external_completer = {|spans|
    let expanded_alias = scope aliases
    | where name == $spans.0
    | get -i 0.expansion

    let spans = if $expanded_alias != null {
        $spans
        | skip 1
        | prepend ($expanded_alias | split row ' ' | take 1)
    } else {
        $spans
    }

    match $spans.0 {
        {{ if eq .chezmoi.os "linux" -}}
        # carapace completions are incorrect for nu
        nu => $fish_completer
        # fish completes commits and branch names in a nicer way
        git => $fish_completer
        {{ else -}}
        # on windows we don't have fish completions so fall back to carapace
        nu => $carapace_completer
        git => $carapace_completer
        {{ end -}}

        xmake => $xmake_completer
        # use zoxide completions for zoxide commands
        __zoxide_z | __zoxide_zi => $zoxide_completer
        _ => $carapace_completer
    } | do $in $spans
}

$env.config.completions.external = {
  enable: true
  completer: $external_completer
}


source ~/.cache/starship/init.nu
source ~/.cache/zoxide/init.nu
source ~/.cache/carapace/init.nu
